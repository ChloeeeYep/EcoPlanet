@{
    int counter = 1; // Start the counter at 1

}

@model GoodsViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
        .header-container {
            display: flex;
            justify-content: space-between; /* Aligns children to opposite ends */
            align-items: center; /* Centers children vertically */
            margin-bottom: 20px; /* Adds some space below the header */
        }

        h1 {
            margin: 0; /* Removes default margin to align properly with the button */
            flex-grow: 1; /* Allows the title to grow and push the button to the right */
        }

        .table-container {
            margin: 0 auto;
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th {
            background-color: #f8f9fa;
            color: #333;
            text-align: center;
            padding: 10px;
            font-size: 16px;
            border-bottom: 1px solid #dee2e6;
        }

        td {
            padding: 10px;
            font-size: 14px;
            border-bottom: 1px solid #dee2e6;
            text-align: center;
        }

        .action-buttons {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin: 0;
        }

        .action-button {
            display: inline-flex;
            justify-content: center;
            align-items: center;
            margin: 0;
            padding: 8px 16px; /* Providing a bit more horizontal padding for aesthetics */
            border-radius: 4px;
            color: #fff;
            text-align: center;
            text-decoration: none;
            cursor: pointer;
            flex: 0 0 auto; /* Do not allow the buttons to grow or shrink */
        }

        .action-button:hover {
            color: white;
        }

        /* Styling for Add button */
        .add {
            background-color: #17a2b8;
        }

            .add:hover, .add:focus {
                background-color: #138496;
            }

        /* Styling for Edit button */
        .edit {
            background-color: #ffc107;
        }

            .edit:hover, .edit:focus {
                background-color: #e0a800;
            }

        /* Styling for Delete button */
        .delete {
            background-color: #dc3545;
        }

        .delete:hover, .delete:focus {
            background-color: #c82333;
        }
    </style>
</head>

    <div class="header-container">
        <h1>Goods Information</h1>
        <a asp-action="AddGoods" class="action-button add">Add New Goods</a>
    </div>


        <div class="table-container">
	        <table>
                <thead>
		            <tr>
			            <th No.</th>
			            <th> Category</th>
			            <th> Name</th>
			            <th> Descriptions</th>
			            <th> Expiry Date</th>
			            <th> Price</th>
			            <th> Quantity</th>
			            <th> Status</th>
			            <th> Image</th>
			            <th>Actions</th>
		            </tr>
                </thead>

                <tbody>
		            @foreach(var item in Model.GoodsList)
		            {
			            <tr>
				            <td>@counter</td>
				            <td>@item.goodsType</td>
				            <td>@item.goodsName</td>
				            <td>@item.goodsDescriptions</td>
                            <td>@item.goodsExpiry.ToString("yyyy-MM-dd")</td>
				            <td>@item.goodsPrice</td>
				            <td>@item.goodsQuantity</td>
				            <td>@item.goodsStatus</td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.goodsImage))
                                {
                                    var image = Model.ImageList.FirstOrDefault(i => i.Key.Trim() == item.goodsImage.Trim());


                                    if (image != null)
                                    {
                                        string imageURL = "https://" + image.BucketName + ".s3.amazonaws.com/" + image.Key;
                                        <img src="@imageURL" width="100" height="100" />
                                    }
                                    else
                                    {
                                        <span>No Image Found for Key: @item.goodsImage</span>
                                    }
                                }
                                else
                                {
                                    <span>No Image Provided</span>
                                }
                            </td>

                            <td class="action-buttons">
                        <a href="@Url.Action("EditGoods", "Goods", new { goodsId = item.goodsId })" class="action-button edit">Edit</a>
                        <a href="@Url.Action("DeleteGoods", "Goods", new { goodsId = item.goodsId })" class="action-button delete">Delete</a>
                            </td>
                        </tr>
                        counter++;
                    }
                </tbody>
	        </table>
        </div>
</html>

